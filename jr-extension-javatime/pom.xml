<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <!-- This module was also published with a richer model, Gradle metadata,  -->
    <!-- which should be used instead. Do not delete the following line which  -->
    <!-- is to indicate to Gradle or any Gradle module metadata file consumer  -->
    <!-- that they should prefer consuming it instead. -->
    <!-- do_not_remove: published-with-gradle-metadata -->
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>tools.jackson.jr</groupId>
        <artifactId>jackson-jr-parent</artifactId>
        <version>3.0.0-rc1-SNAPSHOT</version>
    </parent>

    <artifactId>jackson-jr-extension-javatime</artifactId>
    <packaging>jar</packaging>
    <description>Jackson-jr extension that adds support for Java 8 Date/Time value types such as `java.time.LocalDateTime`</description>
    <url>https://github.com/FasterXML/jackson-jr</url>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <properties>
        <!-- Looks like we need to be bit careful on OSGi exports, to avoid
            accidentally double-exporting jr-objects types
          -->
        <osgi.export>${project.groupId}.extension.javatime;version=${project.version}</osgi.export>

        <!-- for Reproducible Builds -->
        <project.build.outputTimestamp>2025-02-26T23:59:29Z</project.build.outputTimestamp>
    </properties>

    <dependencies>
        <dependency>
            <groupId>tools.jackson.jr</groupId>
            <artifactId>jackson-jr-objects</artifactId>
            <version>${project.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.gradlex</groupId>
                <artifactId>gradle-module-metadata-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>
